version: '3.8'
services:
  task-service:
    build:
      context: .
      dockerfile: ./task-service/Dockerfile
    ports:
      - 8080:8080
    environment:
      - RABBIT_USER=myuser
      - RABBIT_PASSWORD=mypassword
      - RABBIT_HOST=rabbitmq:5672
      - RABBIT_VHOST=/

      - SERVER_ADDRESS=:8080
      - SERVER_READ_TIMEOUT=5s
      - SERVER_WRITE_TIMEOUT=5s
      - SERVER_IDLE_TIMEOUT=30s
    depends_on:
      rabbitmq:
        condition: service_healthy
      code-processor:
        condition: service_started

  code-processor:
    build:
      context: .
      dockerfile: ./code-processor/Dockerfile
    ports:
      - 8081:8081
    environment:
      - RABBIT_USER=myuser
      - RABBIT_PASSWORD=mypassword
      - RABBIT_HOST=rabbitmq:5672
      - RABBIT_VHOST=/
    # volume используется для доступа к docker daemon
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      rabbitmq:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:4.0-management
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: myuser
      RABBITMQ_DEFAULT_PASS: mypassword
      RABBITMQ_DEFAULT_VHOST: /
    # volume используется для доступа к файлам конфигурации rabbit
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./rabbitmq_definitions.json:/etc/rabbitmq/rabbitmq_definitions.json:ro
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 3

  app_test:
    build: ./tests
    environment:
      BASE_URL: http://task-service:8080
    depends_on:
      task-service:
        condition: service_started
      code-processor:
        condition: service_started
    profiles: [ 'test' ]
